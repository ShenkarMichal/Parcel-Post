{"ast":null,"code":"import _asyncToGenerator from \"C:/FullStack/Projects/FullStack-MEAN-Systems/Post/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { appConfig } from '../utils/app-config';\nimport { firstValueFrom } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class DataService {\n  constructor(http) {\n    this.http = http;\n  }\n  getAllPackages() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const observable = _this.http.get(appConfig.packagesURL);\n      const packages = yield firstValueFrom(observable);\n      return packages;\n    })();\n  }\n  getAllCompanies() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const observable = _this2.http.get(appConfig.companiesURL);\n      const companies = yield firstValueFrom(observable);\n      return companies;\n    })();\n  }\n  getPackagesByCompany(companyId) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      const observable = _this3.http.get(appConfig.packagesURL + companyId);\n      const packages = yield firstValueFrom(observable);\n      return packages;\n    })();\n  }\n  addPackage(newPackage) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      const observable = _this4.http.post(appConfig.packagesURL, newPackage);\n      const addedPackage = yield firstValueFrom(observable);\n      return addedPackage;\n    })();\n  }\n  deletePackage(_id) {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      const observable = _this5.http.delete(appConfig.companiesURL + _id);\n      yield firstValueFrom(observable);\n    })();\n  }\n}\nDataService.ɵfac = function DataService_Factory(t) {\n  return new (t || DataService)(i0.ɵɵinject(i1.HttpClient));\n};\nDataService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DataService,\n  factory: DataService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAGA,SAASA,SAAS,QAAQ,qBAAqB;AAC/C,SAASC,cAAc,QAAQ,MAAM;;;AAMrC,OAAM,MAAOC,WAAW;EAEpBC,YAA2BC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAgB;EAElCC,cAAc;IAAA;IAAA;MAEvB,MAAMC,UAAU,GAAG,KAAI,CAACF,IAAI,CAACG,GAAG,CAAiBP,SAAS,CAACQ,WAAW,CAAC;MACvE,MAAMC,QAAQ,SAASR,cAAc,CAACK,UAAU,CAAC;MAEjD,OAAOG,QAAQ;IAAA;EACnB;EAEaC,eAAe;IAAA;IAAA;MAExB,MAAMJ,UAAU,GAAG,MAAI,CAACF,IAAI,CAACG,GAAG,CAAiBP,SAAS,CAACW,YAAY,CAAC;MACxE,MAAMC,SAAS,SAASX,cAAc,CAACK,UAAU,CAAC;MAElD,OAAOM,SAAS;IAAA;EACpB;EAEaC,oBAAoB,CAACC,SAAiB;IAAA;IAAA;MAE/C,MAAMR,UAAU,GAAG,MAAI,CAACF,IAAI,CAACG,GAAG,CAAiBP,SAAS,CAACQ,WAAW,GAAGM,SAAS,CAAC;MACnF,MAAML,QAAQ,SAASR,cAAc,CAACK,UAAU,CAAC;MAEjD,OAAOG,QAAQ;IAAA;EACnB;EAEaM,UAAU,CAACC,UAAwB;IAAA;IAAA;MAE5C,MAAMV,UAAU,GAAG,MAAI,CAACF,IAAI,CAACa,IAAI,CAAejB,SAAS,CAACQ,WAAW,EAAEQ,UAAU,CAAC;MAClF,MAAME,YAAY,SAASjB,cAAc,CAACK,UAAU,CAAC;MAErD,OAAOY,YAAY;IAAA;EACvB;EAEaC,aAAa,CAACC,GAAW;IAAA;IAAA;MAClC,MAAMd,UAAU,GAAG,MAAI,CAACF,IAAI,CAACiB,MAAM,CAAOrB,SAAS,CAACW,YAAY,GAAGS,GAAG,CAAC;MACvE,MAAMnB,cAAc,CAACK,UAAU,CAAC;IAAA;EACpC;;AAvCSJ,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAoB,SAAXpB,WAAW;EAAAqB,YAFR;AAAM","names":["appConfig","firstValueFrom","DataService","constructor","http","getAllPackages","observable","get","packagesURL","packages","getAllCompanies","companiesURL","companies","getPackagesByCompany","companyId","addPackage","newPackage","post","addedPackage","deletePackage","_id","delete","factory","providedIn"],"sourceRoot":"","sources":["C:\\FullStack\\Projects\\FullStack-MEAN-Systems\\Post\\frontend\\src\\app\\services\\data.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { PackageModel } from '../models/package-model';\nimport { appConfig } from '../utils/app-config';\nimport { firstValueFrom } from 'rxjs';\nimport { CompanyModel } from '../models/company-model';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DataService {\n\n    public constructor(private http: HttpClient) { }\n\n    public async getAllPackages(): Promise<PackageModel[]> {\n        \n        const observable = this.http.get<PackageModel[]>(appConfig.packagesURL)\n        const packages = await firstValueFrom(observable)\n\n        return packages        \n    }\n\n    public async getAllCompanies(): Promise<CompanyModel[]> {\n\n        const observable = this.http.get<CompanyModel[]>(appConfig.companiesURL)\n        const companies = await firstValueFrom(observable)\n\n        return companies\n    }\n\n    public async getPackagesByCompany(companyId: string): Promise<PackageModel[]>{\n\n        const observable = this.http.get<PackageModel[]>(appConfig.packagesURL + companyId)\n        const packages = await firstValueFrom(observable)\n\n        return packages\n    }\n\n    public async addPackage(newPackage: PackageModel): Promise<PackageModel> {\n\n        const observable = this.http.post<PackageModel>(appConfig.packagesURL, newPackage)\n        const addedPackage = await firstValueFrom(observable)\n\n        return addedPackage\n    }\n\n    public async deletePackage(_id: string): Promise<void> {\n        const observable = this.http.delete<void>(appConfig.companiesURL + _id)\n        await firstValueFrom(observable)\n    }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}